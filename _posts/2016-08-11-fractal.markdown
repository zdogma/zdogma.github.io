---
layout: post
title:  "宇宙のゼンマイ時計"
date:   2016-08-11 00:57:15 +0900
categories: Processing
image: /images/thumbnails/20160811.png
---

自己相似性を持つアートの例ということで、宇宙のゼンマイ時計を見てみる。
定数をいじってみるだけで動きがかなり変わって面白い。

## デモ

<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/processing.js/1.4.8/processing.min.js"></script>
<script type="text/processing" data-processing-target="processing-canvas">
int _numChildren = 4;
int _maxLevels = 5;

Branch _trunk;

void setup() {
  size(750, 750);
  background(255);
  noFill();
  smooth();
  newTree();
}

void draw() {
  background(255);
  _trunk.updateMe(width/2, height/2);
  _trunk.drawMe();
}

void newTree() {
  _trunk = new Branch(1, 0, width/2, 50);
  _trunk.drawMe();
}

class Branch {
  float level, index;
  float x, y;
  float endX, endY;
  float strokeW, alph;
  float len, lenChange;
  float rot, rotChange;

  Branch [] children = new Branch[0];

  Branch(float lev, float ind, float ex, float why) {
    level = lev;
    index = ind;

    strokeW = (1/level) * 10;
    alph = 255 / level;
    len = (1/level) * random(200);
    rot = random(360);
    lenChange = random(10) - 5;
    rotChange = random(10) - 5;

    updateMe(ex, why);

    if (level < _maxLevels) {
      children = new Branch[_numChildren];
      for (int x = 0; x < _numChildren; x++) {
        children[x] = new Branch(level+1, x, endX, endY);
      }
    }
  }

  void updateMe(float ex, float why) {
    x = ex;
    y = why;

    rot += rotChange;
    if (rot > 360) {
      rot = 0;
    } else if (rot < 0) {
      rot = 360;
    }

    len -= lenChange;
    if (len < 0) {
      lenChange *= -1;
    } else if (len > 200) {
      lenChange *= -1;
    }

    float radian = radians(rot);
    endX = x + (len * cos(radian));
    endY = y + (len * sin(radian));

    for (int i=0; i < children.length; i++) {
      children[i].updateMe(endX, endY);
    }
  }

  void drawMe() {
    if (level > 1) {
      strokeWeight(strokeW);
      stroke(0, alph);
      fill(255, alph);
    }
    line(x, y, endX, endY);
    ellipse(endX, endY, len/12, len/12);
    for (int i=0; i < children.length; i++) {
      children[i].drawMe();
    }
  }
}
</script>
<div>
  <canvas id="processing-canvas" class="canvas" width="200px" height="200px"></canvas>
</div>

## ソースコード

{% highlight java %}
int _numChildren = 4;
int _maxLevels = 5;

Branch _trunk;

void setup() {
  size(750, 750);
  background(255);
  noFill();
  smooth();
  newTree();
}

void draw() {
  background(255);
  _trunk.updateMe(width/2, height/2);
  _trunk.drawMe();
}

void newTree() {
  _trunk = new Branch(1, 0, width/2, 50);
  _trunk.drawMe();
}

class Branch {
  float level, index;
  float x, y;
  float endX, endY;
  float strokeW, alph;
  float len, lenChange;
  float rot, rotChange;

  Branch [] children = new Branch[0];

  Branch(float lev, float ind, float ex, float why) {
    level = lev;
    index = ind;

    strokeW = (1/level) * 10;
    alph = 255 / level;
    len = (1/level) * random(200);
    rot = random(360);
    lenChange = random(10) - 5;
    rotChange = random(10) - 5;

    updateMe(ex, why);

    if (level < _maxLevels) {
      children = new Branch[_numChildren];
      for (int x = 0; x < _numChildren; x++) {
        children[x] = new Branch(level+1, x, endX, endY);
      }
    }
  }

  void updateMe(float ex, float why) {
    x = ex;
    y = why;

    rot += rotChange;
    if (rot > 360) {
      rot = 0;
    } else if (rot < 0) {
      rot = 360;
    }

    len -= lenChange;
    if (len < 0) {
      lenChange *= -1;
    } else if (len > 200) {
      lenChange *= -1;
    }

    float radian = radians(rot);
    endX = x + (len * cos(radian));
    endY = y + (len * sin(radian));

    for (int i=0; i < children.length; i++) {
      children[i].updateMe(endX, endY);
    }
  }

  void drawMe() {
    if (level > 1) {
      strokeWeight(strokeW);
      stroke(0, alph);
      fill(255, alph);
    }
    line(x, y, endX, endY);
    ellipse(endX, endY, len/12, len/12);
    for (int i=0; i < children.length; i++) {
      children[i].drawMe();
    }
  }
}
{% endhighlight %}

## メモ
* [radians()](https://processing.org/reference/radians_.html)
  - Converts a degree measurement to its corresponding value in radians.
    - 度数をラジアンに変換する
